{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/index.js","components/Statistics/index.js","components/FriendList/FriendList.styled.js","components/FriendList/index.js","components/TransactionHistory/index.js","App.js","index.js"],"names":["module","exports","Profile","user","className","styles","profile","description","src","avatar","alt","name","tag","location","stats","statsItem","label","quantity","followers","views","likes","generateRandomColor","Math","floor","random","toString","Statistics","title","statistics","statsTitle","style","color","statList","length","map","id","percentage","key","backgroundColor","StyledUl","styled","ul","StyledLi","li","StyledSpan","span","props","isOnline","StyledAvatar","img","StyledName","p","FriendList","friends","TransactionHistory","items","tableContainer","tableTitle","tableBody","type","amount","currency","App","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d314d7ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1QIPp\",\"description\":\"Profile_description__18jm7\",\"avatar\":\"Profile_avatar__S3lZG\",\"name\":\"Profile_name__lWrfp\",\"tag\":\"Profile_tag__1HlMe\",\"location\":\"Profile_location__3ce23\",\"stats\":\"Profile_stats__3q3KB\",\"statsItem\":\"Profile_statsItem__KgT4-\",\"label\":\"Profile_label__36wUD\",\"quantity\":\"Profile_quantity__9zVXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2GnOa\",\"statsTitle\":\"Statistics_statsTitle__3qHG-\",\"statList\":\"Statistics_statList__l6fO-\",\"statsItem\":\"Statistics_statsItem__26TYg\",\"label\":\"Statistics_label__3GOfS\",\"percentage\":\"Statistics_percentage__N75IE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"TransactionHistory_tableContainer___aKAx\",\"tableTitle\":\"TransactionHistory_tableTitle__2mTrI\",\"tableBody\":\"TransactionHistory_tableBody__1NMQ0\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ user }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img src={user.avatar} alt=\"avatar\" className={styles.avatar} />\n      <p className={styles.name}>{user.name}</p>\n      <p className={styles.tag}>{`@${user.tag}`}</p>\n      <p className={styles.location}>{user.location}</p>\n    </div>\n    <ul className={styles.stats}>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{user.stats.followers}</span>\n      </li>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{user.stats.views}</span>\n      </li>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{user.stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    avatar: PropTypes.string,\n    location: PropTypes.string,\n    name: PropTypes.string,\n    tag: PropTypes.string,\n    stats: PropTypes.shape({\n      followers: PropTypes.number,\n      likes: PropTypes.number,\n      views: PropTypes.number,\n    }),\n  }).isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction generateRandomColor() {\n  const randomColor = `#${Math.floor(Math.random() * 16777216).toString(16)}`;\n  return randomColor;\n}\n\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.statistics}>\n    {title && (\n      <h2\n        className={styles.statsTitle}\n        style={{ color: generateRandomColor() }}\n      >\n        {title}\n      </h2>\n    )}\n    <ul className={styles.statList}>\n      {stats.length > 0 &&\n        stats.map(({ id, label, percentage }) => (\n          <li\n            key={id}\n            className={styles.statsItem}\n            style={{ backgroundColor: generateRandomColor() }}\n          >\n            <span\n              className={styles.label}\n              style={{ color: generateRandomColor() }}\n            >\n              {label}\n            </span>\n            <span\n              className={styles.percentage}\n              style={{ color: generateRandomColor() }}\n            >{`${percentage}%`}</span>\n          </li>\n        ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","import styled from 'styled-components';\n\nexport const StyledUl = styled.ul`\n  margin: 0 auto;\n  list-style: none;\n  padding: 0;\n  width: 400px;\n  margin-bottom: 100px;\n`;\n\nexport const StyledLi = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  padding-left: 20px;\n  box-shadow: 1px 1px 3px 1px rgba(191, 205, 222, 0.75);\n`;\n\nexport const StyledSpan = styled.span`\n  margin-right: 20px;\n  height: 25px;\n  width: 25px;\n  border-radius: 50%;\n  background-color: ${props => (props.isOnline ? 'green' : 'red')};\n`;\n\nexport const StyledAvatar = styled.img`\n  width: 100px;\n  height: 100px;\n  margin-right: 20px;\n  padding: 10px 0;\n  border-radius: 15%;\n`;\n\nexport const StyledName = styled.p`\n  font-family: Tahoma, sans-serif;\n  font-size: 30px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledUl,\n  StyledLi,\n  StyledSpan,\n  StyledAvatar,\n  StyledName,\n} from './FriendList.styled';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <StyledUl>\n      {friends.map(({ id, isOnline, avatar, name }) => (\n        <StyledLi key={id}>\n          <StyledSpan isOnline={isOnline} />\n          <StyledAvatar src={avatar} alt=\"avatar\" />\n          <StyledName>{name}</StyledName>\n        </StyledLi>\n      ))}\n    </StyledUl>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool,\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.tableContainer}>\n    <thead className={styles.tableTitle}>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody className={styles.tableBody}>\n      {items.length > 0 &&\n        items.map(({ id, type, amount, currency }) => (\n          <tr key={id}>\n            <td>{type}</td>\n            <td>{amount}</td>\n            <td>{currency}</td>\n          </tr>\n        ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './components/Profile';\nimport Statistics from './components/Statistics';\nimport FriendList from './components/FriendList';\nimport TransactionHistory from './components/TransactionHistory';\nimport user from './components/Profile/user.json';\nimport statistics from './components/Statistics/statisticalData.json';\nimport friends from './components/FriendList/friends.json';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nconst App = () => (\n  <>\n    <Profile user={user} />\n    <Statistics title=\"Upload stats\" stats={statistics} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}